#######################################
#         YAML Templates              #
#######################################
variables:
  - &run-build
    # runs a build operations. The task name in evergreen should
    # correspond to a make target for the build operation.
    name: test
    commands:
      - func: run-make
        vars: { target: "${task_name}" }

#######################################
#              Functions              #
#######################################
functions:
  run-make:
    command: shell.exec
    type: test
    params:
       script: |
         set -o errexit
         set -o xtrace

         # Configure a local go path for this build.
         export GOPATH=`pwd`/gopath

         # on windows we need to turn the slashes the other way
         if [ "Windows_NT" == "$OS" ]; then
            export GOPATH=$(cygpath -m $GOPATH)
         fi

         cd gopath/src/github.com/mongodb/anser

         # Run make, called with proper environment variables set,
         # running the target.
         ${build_env|} make ${target}
  set-up-mongodb:
    - command: shell.exec
      type: setup
      params:
        script: |
          set -o errexit
          set -o verbose

          rm -rf mongodb
          mkdir mongodb
          cd mongodb
          curl ${mongodb_url} -o mongodb${archiveExt|.tgz}

          ${decompress} mongodb${archiveExt|.tgz}
          chmod +x ./mongodb-*/bin/*
          mv ./mongodb-*/bin/* .
          rm -rf db_files
          rm -rf db_logs
          mkdir db_files
          mkdir db_logs
    - command: shell.exec
      type: setup
      params:
        background: true
        script: |
          set -o errexit
          set -o verbose

          cd mongodb
          echo "starting mongod..."
          ./mongod${extension|} --dbpath ./db_files &
          echo "waiting for mongod to start up"
    - command: shell.exec
      type: setup
      params:
        script: |
          set -o errexit
          set -o verbose

          cd mongodb
          ./mongo${extension|} --nodb --eval 'assert.soon(function(x){try{var d = new Mongo("localhost:27017"); return true}catch(e){return false}}, "timed out connecting")'
          echo "mongod is up."

#######################################
#                Tasks                #
#######################################

tasks:
  - <<: *run-build
    tags: ["test"]
    name: test-apm
  - <<: *run-build
    tags: ["test"]
    name: test-mock
  - <<: *run-build
    tags: ["test"]
    name: test-model
  - <<: *run-build
    tags: ["test"]
    name: test-anser
  - <<: *run-build
    tags: ["test"]
    name: test-db
  - <<: *run-build
    tags: ["test"]
    name: test-client

  - <<: *run-build
    tags: ["lint"]
    name: lint-apm
  - <<: *run-build
    tags: ["lint"]
    name: lint-mock
  - <<: *run-build
    tags: ["lint"]
    name: lint-model
  - <<: *run-build
    tags: ["lint"]
    name: lint-anser
  - <<: *run-build
    tags: ["lint"]
    name: lint-db
  - <<: *run-build
    tags: ["lint"]
    name: lint-client

task_groups:
  - name: lintGroup
    tasks: [ ".lint"]
    max_hosts: 2
    setup_group:
      - command: git.get_project
        params:
          directory: gopath/src/github.com/mongodb/anser
    setup_task:
      - func: run-make
        vars: { target: "clean-results" }
    teardown_task:
      - command: gotest.parse_files
        type: setup
        params:
          files:
            - "gopath/src/github.com/mongodb/anser/build/output.*"
  - name: testGroup
    tasks: [ ".test"]
    max_hosts: 2
    setup_group_can_fail_task: true
    share_processes: true
    setup_group:
      - command: git.get_project
        params:
          directory: gopath/src/github.com/mongodb/anser
      - func: set-up-mongodb
    setup_task:
      - func: run-make
        vars: { target: "clean-results" }
    teardown_task:
      - command: gotest.parse_files
        type: setup
        params:
          files:
            - "gopath/src/github.com/mongodb/anser/build/output.*"

#######################################
#           Buildvariants             #
#######################################
buildvariants:
  - name: race-detector
    display_name: Race Detector (Arch Linux)
    expansions:
      build_env: "RACE_DETECTOR=true"
      mongodb_url: https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.6.4.tgz
    run_on:
      - archlinux-test
    tasks: [ "testGroup" ]

  - name: lint
    display_name: Lint (Arch Linux)
    run_on:
      - archlinux-test
    tasks: [ "lintGroup" ]

  - name: ubuntu1604
    display_name: Ubuntu 16.04
    expansions:
      build_env: "GOROOT=/opt/golang/go1.9/ PATH=/opt/golang/go1.9/bin:$PATH"
      mongodb_url: https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.6.4.tgz
    run_on:
      - ubuntu1604-test
    tasks: [ "testGroup" ]

  - name: macos
    display_name: macOS
    expansions:
      build_env: "GOROOT=/opt/golang/go1.11/ PATH=/opt/golang/go1.11/bin:$PATH"
      mongodb_url: https://fastdl.mongodb.org/osx/mongodb-osx-x86_64-3.2.9.tgz
    run_on:
      - macos-1014
    tasks: [ "testGroup" ]
